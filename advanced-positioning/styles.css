* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/*
explicit height on the <body> element let us scroll up and down the page
 */
body {
  height: 1200px;
}

.container {
  display: flex;
  justify-content: center;
}

.example {
  display: flex;
  justify-content: flex-start;

  width: 800px;
  margin: 50px 0;
  background-color: #D6E9FE;
}

.item img {
  display:block;
}

/*
“Relative positioning” moves elements around relative to where they would
normally appear in the static flow of the page.
 */
.item-relative {
  position: relative;
  top: -30px;
  right: 30px;
}

/*
Coordinates for absolute elements are always relative to the closest container
that is a positioned element. It only falls back to being relative to the browser
when none of its ancestors are positioned. So, if we change .item-absolute’s
parent element to be relatively positioned, it should appear in the top-left
corner of that element instead of the browser window.

*/
.absolute {
  position: relative;
}

/*
“Absolute positioning” is just like relative positioning, but the offset is
relative to the entire browser window instead of the original position of
the element.
 */
.item-absolute {
  position: absolute;
  top: 10px;
  left: 10px;
}

.item-fixed {
  position: fixed;
  bottom: 0;
  right: 0;
}
